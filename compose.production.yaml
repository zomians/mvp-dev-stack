name: mvp-production

# 本番環境用のオーバーライド設定
# 使用方法: docker compose -f compose.yaml -f compose.production.yaml up

services:
  rails:
    build:
      target: production  # 本番用ステージを使用
      cache_from:
        - type=registry,ref=myapp/rails:cache
      cache_to:
        - type=registry,ref=myapp/rails:cache,mode=max
    environment:
      - RAILS_ENV=production
      - RAILS_LOG_LEVEL=info
      - RAILS_SERVE_STATIC_FILES=false  # Nginxから配信
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - DATABASE_URL=${DATABASE_URL:-sqlite3:db/production.sqlite3}
    volumes:
      - rails_storage_prod:/app/storage
      - rails_public:/app/public
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  flutter:
    build:
      target: production  # Nginx本番ステージを使用
      cache_from:
        - type=registry,ref=myapp/flutter:cache
      cache_to:
        - type=registry,ref=myapp/flutter:cache,mode=max
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - rails_public:/var/www/rails/public:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - rails
      - flutter
    restart: unless-stopped
    networks:
      - mvp-network

  redis:
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # 本番環境ではmailcatcherを削除
  mailcatcher:
    deploy:
      replicas: 0  # 本番環境では無効化

volumes:
  rails_storage_prod:
    driver: local
  rails_public:
    driver: local