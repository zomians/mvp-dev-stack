# ローカル開発用のオーバーライド設定
# 使用方法: cp compose.override.yaml.example compose.override.yaml
# Docker Composeは自動的にこのファイルを読み込みます

services:
  rails:
    # ローカル開発用の追加設定
    environment:
      # デバッグレベルを上げる
      - RAILS_LOG_LEVEL=debug
      - VERBOSE=true
    # ホストネットワークを使用（Mac/Linuxのみ）
    # network_mode: host
    
    # 追加ボリューム（ローカル設定ファイルなど）
    volumes:
      - ~/.ssh:/root/.ssh:ro
      - ~/.gitconfig:/root/.gitconfig:ro
    
    # リソース制限を緩和
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4G

  flutter:
    # ホットリロードを有効化
    environment:
      - FLUTTER_HOT_RELOAD=true
      - DEBUG=true
    
    # 追加のデバッグポート
    ports:
      - "9101:9101"  # Additional debug port
      - "9102:9102"  # DevTools port

  # ローカル開発用の追加サービス
  adminer:
    image: adminer
    ports:
      - "8082:8080"
    networks:
      - mvp-network
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    profiles:
      - debug

  # PostgreSQL（SQLiteの代わりに使用する場合）
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=rails
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=railsapp_development
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mvp-network
    profiles:
      - postgres

volumes:
  postgres_data:
    driver: local